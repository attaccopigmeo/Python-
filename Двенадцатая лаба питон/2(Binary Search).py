"""
Дано целое число X и текстовый файл. В файле записан набор целых чисел,
расположенных в неубывающем порядке. С помощью метода бинарного поиска определить
индекс самого левого вхождения числа X в исходный набор. Нумерация элементов начинается с
нуля. Если элемент не найден, вывести -1. Чисел в исходном наборе не более 200.
Бинарный поиск
"""
X = int(input("Введите число: "))
f = open("/Users/kamillasmidt/Python--2/Двенадцатая лаба питон/2.txt", "r")


def binary_search(arr, target):
    """
    arr: массив для поиска.
    target: элемент, который нужно найти.
    return: индекс элемента или -1, если не найдено
    """
    left = 0
    right = len(arr)
    while left < right: #Пока отрезок, который проверяем, не пуст, продолжаем поиск
        mid = (left + right) // 2 #Находим номер середины
        middle = arr[mid] #Находим число посередине
        if middle < target: #Если середина меньше X, переходим к правой половине
            left = mid + 1 #Левую границу ставим в начало правой половины
        else:
            right = mid #Иначе переходим к левой половине
    if arr[left] == target: #Проверяем нашелся ли эл.
        return left
    else:
        return -1 #Если не найден


array = []
for s in f:
    array.append(int(s)) #Читаем по строке и добавляем числа в массив
print("Индекс самого левого вхождения числа X в исходный набор:", binary_search(array, X))